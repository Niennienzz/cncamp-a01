apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpserver
spec:
  replicas: 3
  selector:
    matchLabels:
      app: httpserver
  template:
    metadata:
      annotations:
        prometheus.io/port: httpserver-port
        prometheus.io/scrape: "true"
      labels:
        app: httpserver
    spec:
      # It is allowed to have multiple containers within a Pod.
      # But usually we use one container per Pod.
      containers:
        - name: httpserver
          image: niennienzz/cncamp_http_server:latest # The image location in the registry.
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: httpserver-port
          env:
            # Secrets and configs for httpserver.
            - name: PWD_HASH_SECRET
              valueFrom:
                secretKeyRef:
                  name: httpserver-secret
                  key: httpserver-password-hash-secret
            - name: TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: httpserver-secret
                  key: httpserver-token-hmac-secret
            - name: PWD_SALT_LEN
              valueFrom:
                configMapKeyRef:
                  name: httpserver-config
                  key: password-salt-length
            - name: TOKEN_EXPIRE_SEC
              valueFrom:
                configMapKeyRef:
                  name: httpserver-config
                  key: token-expire-sec
            - name: RATE_LIMIT
              valueFrom:
                configMapKeyRef:
                  name: httpserver-config
                  key: rate-limit
            - name: RATE_LIMIT_WINDOW_SEC
              valueFrom:
                configMapKeyRef:
                  name: httpserver-config
                  key: rate-limit-window-sec
            - name: FETCH_WINDOW_SEC
              valueFrom:
                configMapKeyRef:
                  name: httpserver-config
                  key: fetch-window-sec
            # Secrets and configs for mongo.
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo-user
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo-password
            - name: MONGO_URL
              valueFrom:
                configMapKeyRef:
                  name: mongo-config
                  key: mongo-url
          resources:
            limits:
              cpu: 100m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 500Mi
          readinessProbe:
            httpGet:
              port: 8080
              path: /healthz
            initialDelaySeconds: 5  # Start to probe after 5s.
            periodSeconds: 30       # After starting, probe every 30s.
            timeoutSeconds: 2       # Pod must answer within 2s.
            successThreshold: 1     # 1 successful probe -> success.
            failureThreshold: 2     # 2 failed probes -> failure.
          livenessProbe:
            httpGet:
              port: 8080
              path: /healthz
            initialDelaySeconds: 30 # Start to probe after 30s.
            periodSeconds: 30       # After starting, probe every 30s.
            timeoutSeconds: 2       # Pod must answer within 2s.
            successThreshold: 1     # 1 successful probe -> success.
            failureThreshold: 2     # 2 failed probes -> failure.
      terminationGracePeriodSeconds: 30 # Graceful shutdown.

---

apiVersion: v1
kind: Service
metadata:
  name: httpserver
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: httpserver
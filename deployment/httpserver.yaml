apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpserver-deployment
  labels:
    app: httpserver
spec:
  replicas: 3
  selector:
    # All Pods that match the following label belong to the current Deployment.
    matchLabels:
      app: httpserver
  # Configuration for Pod insides the Deployment.
  # Thus, 'template' has its own 'metadata' and 'spec' sections.
  template:
    metadata:
      # The 'labels' section is required for Pods in order for selector to use.
      labels:
        app: httpserver
    spec:
      # It is allowed to have multiple containers within a Pod.
      # But usually we use one container per Pod.
      containers:
        - name: httpserver
          image: niennienzz/cncamp_http_server:latest # The image location in the registry.
          ports:
            - containerPort: 8080
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo-user
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo-password
            - name: MONGO_URL
              valueFrom:
                configMapKeyRef:
                  name: mongo-config
                  key: mongo-url
          resources:
            limits:
              cpu: 100m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 500Mi
          readinessProbe:
            httpGet:
              port: 8080
              path: /healthz
            initialDelaySeconds: 5  # Start to probe after 5s.
            periodSeconds: 30       # After starting, probe every 30s.
            timeoutSeconds: 2       # Pod must answer within 2s.
            successThreshold: 1     # 1 successful probe -> success.
            failureThreshold: 2     # 2 failed probes -> failure.
          livenessProbe:
            httpGet:
              port: 8080
              path: /healthz
            initialDelaySeconds: 30 # Start to probe after 30s.
            periodSeconds: 30       # After starting, probe every 30s.
            timeoutSeconds: 2       # Pod must answer within 2s.
            successThreshold: 1     # 1 successful probe -> success.
            failureThreshold: 2     # 2 failed probes -> failure.
      terminationGracePeriodSeconds: 30 # Graceful shutdown.

---

apiVersion: v1
kind: Service
metadata:
  # This is the name of the current Service for others to use.
  name: httpserver-service
spec:
  # Set the current Service as external using the NodePort type.
  type: NodePort
  selector:
    # This is how Service finds the Pod.
    app: httpserver
  ports:
    - protocol: TCP
      port: 8080 # Port the current Service is exposing.
      targetPort: 8080 # Port of the Pod.
      nodePort: 30100 # Exposes the current Service on each Node's IP at a static port.